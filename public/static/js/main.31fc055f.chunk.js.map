{"version":3,"sources":["reducers/tasks.js","sagas/index.js","reducers/filter.js","helpers/withLoading.js","reducers/index.js","components/TaskForm/TaskForm.js","components/Filters/Filters.js","components/TaskItem/TaskCard.js","components/TaskItem/EditedTaskCard.js","components/TaskItem/TaskCheckbox.js","components/TaskItem/TaskItem.js","components/TasksList/TasksList.js","containers/App/App.js","helpers/getFilteredTasks.js","actions/taskActions.js","index.js"],"names":["ALL_TASKS_REQUEST","ALL_TASKS_SUCCESS","ALL_TASKS_FAILURE","ADD_TASK_REQUEST","ADD_TASK_SUCCESS","ADD_TASK_FAILURE","UPDATE_TASK_REQUEST","UPDATE_TASK_SUCCESS","DELETE_TASK_REQUEST","DELETE_TASK_SUCCESS","initialState","tasks","isLoading","getTasks","addTask","updateTask","deleteTask","watchGetTasks","watchAddTask","watchUpdateTask","watchDeleteTask","_ref","data","regenerator_default","a","wrap","_context","prev","next","call","axios","get","sent","put","type","t0","err","stop","_marked","this","_ref2","text","_ref3","_context2","post","task","_marked2","_ref4","prevTask","nextTask","_context3","concat","_id","_marked3","_ref5","_context4","delete","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_callee","_context9","all","_marked9","Component","combineReducers","taskReducer","state","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","filtered","map","filter","t","active","TaskForm","_useState","useState","_useState2","slicedToArray","value","setValue","submitHandler","e","preventDefault","react_default","createElement","className","onSubmit","onChange","target","placeholder","href","onClick","ALL","CURRENT","COMPLETED","TaskFilter","activeFilter","changeFilter","filterHandler","isActive","TaskCard","setEdited","isCompleted","title","EditedTaskCard","updatedTask","autoFocus","autoComplete","TaskCheckbox","isEdited","id","checked","htmlFor","TaskItem","components_TaskItem_TaskCheckbox","TaskItem_EditedTaskCard","TaskItem_TaskCard","withLoading","components_TaskItem_TaskItem","key","props","objectWithoutProperties","connect","getAllTasks","useEffect","components_TaskForm_TaskForm","Filters_Filters","TasksList_TasksList","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","sagas","ReactDOM","render","es","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.31fc055f.chunk.js","sourcesContent":["export const ALL_TASKS_REQUEST = \"ALL_TASKS_REQUEST\";\r\nexport const ALL_TASKS_SUCCESS = \"ALL_TASKS_SUCCESS\";\r\nexport const ALL_TASKS_FAILURE = \"ALL_TASKS_FAILURE\";\r\nexport const ADD_TASK_REQUEST = \"ADD_TASK_REQUEST\";\r\nexport const ADD_TASK_SUCCESS = \"ADD_TASK_SUCCESS\";\r\nexport const ADD_TASK_FAILURE = \"ADD_TASK_FAILURE\";\r\nexport const UPDATE_TASK_REQUEST = \"UPDATE_TASK_REQUEST\";\r\nexport const UPDATE_TASK_SUCCESS = \"UPDATE_TASK_SUCCESS\";\r\nexport const DELETE_TASK_REQUEST = \"DELETE_TASK_REQUEST\";\r\nexport const DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  isLoading: true\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ALL_TASKS_REQUEST: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case ALL_TASKS_SUCCESS: {\r\n      return { tasks: action.tasks, isLoading: false };\r\n    }\r\n    case ALL_TASKS_FAILURE: {\r\n      return { ...state, isLoading: false };\r\n    }\r\n    case ADD_TASK_SUCCESS: {\r\n      return { ...state, tasks: [...state.tasks, action.task] };\r\n    }\r\n    case UPDATE_TASK_SUCCESS: {\r\n      const filtered = state.tasks.map(task => {\r\n        return task._id === action.task._id ? action.task : task;\r\n      });\r\n      return { ...state, tasks: filtered };\r\n    }\r\n    case DELETE_TASK_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => t._id !== action.task._id)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { call, put, takeEvery, all } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ALL_TASKS_REQUEST,\r\n  ALL_TASKS_SUCCESS,\r\n  ALL_TASKS_FAILURE,\r\n  ADD_TASK_REQUEST,\r\n  ADD_TASK_SUCCESS,\r\n  ADD_TASK_FAILURE,\r\n  UPDATE_TASK_REQUEST,\r\n  UPDATE_TASK_SUCCESS,\r\n  DELETE_TASK_REQUEST,\r\n  DELETE_TASK_SUCCESS\r\n} from \"../reducers/tasks\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction* getTasks() {\r\n  try {\r\n    const { data } = yield call(axios.get, \"/api/v1/tasks\");\r\n    yield put({ type: ALL_TASKS_SUCCESS, tasks: data.tasks });\r\n  } catch (err) {\r\n    yield put({ type: ALL_TASKS_FAILURE, err });\r\n  }\r\n}\r\n\r\nfunction* addTask({ text }) {\r\n  try {\r\n    const { data } = yield call(axios.post, \"/api/v1/tasks\", { text });\r\n    yield put({ type: ADD_TASK_SUCCESS, task: data.task });\r\n  } catch (err) {\r\n    yield put({ type: ADD_TASK_FAILURE, err });\r\n  }\r\n}\r\n\r\nfunction* updateTask({ prevTask, nextTask }) {\r\n  try {\r\n    yield put({ type: UPDATE_TASK_SUCCESS, task: nextTask });\r\n    yield call(axios.put, `/api/v1/tasks/${nextTask._id}`, nextTask);\r\n  } catch (err) {\r\n    yield put({ type: UPDATE_TASK_SUCCESS, task: prevTask });\r\n  }\r\n}\r\n\r\nfunction* deleteTask({ task }) {\r\n  try {\r\n    yield put({ type: DELETE_TASK_SUCCESS, task });\r\n    yield call(axios.delete, `/api/v1/tasks/${task._id}`);\r\n  } catch (err) {\r\n    yield put({ type: ADD_TASK_SUCCESS, task });\r\n  }\r\n}\r\n\r\nfunction* watchGetTasks() {\r\n  yield takeEvery(ALL_TASKS_REQUEST, getTasks);\r\n}\r\n\r\nfunction* watchAddTask() {\r\n  yield takeEvery(ADD_TASK_REQUEST, addTask);\r\n}\r\n\r\nfunction* watchUpdateTask() {\r\n  yield takeEvery(UPDATE_TASK_REQUEST, updateTask);\r\n}\r\n\r\nfunction* watchDeleteTask() {\r\n  yield takeEvery(DELETE_TASK_REQUEST, deleteTask);\r\n}\r\n\r\nexport default function*() {\r\n  yield all([\r\n    watchGetTasks(),\r\n    watchAddTask(),\r\n    watchUpdateTask(),\r\n    watchDeleteTask()\r\n  ]);\r\n}\r\n","export const CHANGE_FILTER = \"CHANGE_FILTER\";\r\n\r\nexport const filters = [\"all\", \"current\", \"completed\"];\r\n\r\nexport const changeFilter = filter => ({ type: CHANGE_FILTER, filter });\r\n\r\nexport default (state = { active: \"all\" }, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FILTER: {\r\n      return { active: action.filter };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport default Component => {\r\n  return ({ isLoading, ...props }) =>\r\n    isLoading ? (\r\n      <div className=\"task-list\">\r\n        <p className=\"loader\">[ загрузка... ]</p>\r\n      </div>\r\n    ) : (\r\n      <Component {...props} />\r\n    );\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport filter from \"./filter\";\r\n\r\nexport default combineReducers({ taskReducer: tasks, filter });\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskForm.css\";\r\n\r\nconst TaskForm = ({ addTask }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const changeHandler = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (value === \"\") return;\r\n    addTask(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form\">\r\n      <form onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          onChange={changeHandler}\r\n          value={value}\r\n          placeholder=\"Добавить задачу\"\r\n        />\r\n\r\n        <a href=\"/\" className=\"form-submit\" onClick={submitHandler}>\r\n          +\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskForm.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport { filters } from \"../../reducers/filter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Filters.css\";\r\n\r\nconst [ALL, CURRENT, COMPLETED] = filters;\r\n\r\nconst TaskFilter = ({ activeFilter, changeFilter }) => {\r\n  const filterHandler = filter => e => {\r\n    e.preventDefault();\r\n    changeFilter(filter);\r\n  };\r\n\r\n  const isActive = (activeFilter, filter) => {\r\n    return activeFilter === filter ? \"active\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, ALL)}`}\r\n        onClick={filterHandler(ALL)}\r\n      >\r\n        Все\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, CURRENT)}`}\r\n        onClick={filterHandler(CURRENT)}\r\n      >\r\n        Активные\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, COMPLETED)}`}\r\n        onClick={filterHandler(COMPLETED)}\r\n      >\r\n        Выполненные\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskFilter.propTypes = {\r\n  activeFilter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst TaskCard = ({ task, setEdited, deleteTask }) => {\r\n  const editlHandler = e => {\r\n    e.preventDefault();\r\n    setEdited(true);\r\n  };\r\n\r\n  const deleteHandler = e => {\r\n    e.preventDefault();\r\n    deleteTask(task);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-card ${task.isCompleted ? \"completed\" : \"\"}`}>\r\n      <a href=\"/\" className=\"task-edit\" title=\"изменить\" onClick={editlHandler}>\r\n        &#x270E;\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className=\"task-delete\"\r\n        title=\"удалить\"\r\n        onClick={deleteHandler}\r\n      >\r\n        &#x2716;\r\n      </a>\r\n      <span className=\"task-text\">{task.text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCard.propTypes = {\r\n  task: PropTypes.shape({\r\n    _id: PropTypes.string,\r\n    isCompleted: PropTypes.bool,\r\n    text: PropTypes.string\r\n  }).isRequired,\r\n  setEdited: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCard;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst EditedTaskCard = ({ task, setEdited, updateTask, deleteTask }) => {\r\n  const [value, setValue] = useState(task.text);\r\n\r\n  const changeHandler = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const cancelHandler = e => {\r\n    e.preventDefault();\r\n    setValue(task.text);\r\n    setEdited(false);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (value === \"\") {\r\n      deleteTask(task);\r\n    } else {\r\n      const updatedTask = { ...task, text: value };\r\n      updateTask(task, updatedTask);\r\n    }\r\n    setEdited(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-card edited\">\r\n      <form onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"task-text\"\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          onChange={changeHandler}\r\n          value={value}\r\n        />\r\n        <a\r\n          href=\"/\"\r\n          className=\"task-cancel\"\r\n          title=\"отменить\"\r\n          onClick={cancelHandler}\r\n        >\r\n          &#x2716;\r\n        </a>\r\n        <a\r\n          href=\"/\"\r\n          className=\"task-save\"\r\n          title=\"сохранить\"\r\n          onClick={submitHandler}\r\n        >\r\n          OK\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditedTaskCard.propTypes = {\r\n  task: PropTypes.shape({\r\n    _id: PropTypes.string,\r\n    isCompleted: PropTypes.bool,\r\n    text: PropTypes.string\r\n  }).isRequired,\r\n  setEdited: PropTypes.func.isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EditedTaskCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskCheckbox.css\";\r\n\r\nconst TaskCheckbox = ({ task, isEdited, updateTask }) => {\r\n  const completeToggle = () => {\r\n    if (!isEdited) {\r\n      const updatedTask = { ...task, isCompleted: !task.isCompleted };\r\n      updateTask(task, updatedTask);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`check_${task._id}`}\r\n        checked={task.isCompleted}\r\n        onChange={completeToggle}\r\n      />\r\n      <label\r\n        htmlFor={`check_${task._id}`}\r\n        title=\"отметить\"\r\n        className={`proxy-checkbox ${task.isCompleted ? \"checked\" : \"\"}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCheckbox.propTypes = {\r\n  task: PropTypes.shape({\r\n    _id: PropTypes.string,\r\n    isCompleted: PropTypes.bool,\r\n    text: PropTypes.string\r\n  }).isRequired,\r\n  isEdited: PropTypes.bool.isRequired,\r\n  updateTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCheckbox;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nimport TaskCard from \"./TaskCard\";\r\nimport EditedTaskCard from \"./EditedTaskCard\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\n\r\nconst TaskItem = ({ task, updateTask, deleteTask }) => {\r\n  const [isEdited, setEdited] = useState(false);\r\n\r\n  return (\r\n    <div className=\"task-item\">\r\n      <TaskCheckbox task={task} isEdited={isEdited} updateTask={updateTask} />\r\n\r\n      {!isEdited ? (\r\n        <TaskCard task={task} setEdited={setEdited} deleteTask={deleteTask} />\r\n      ) : (\r\n        <EditedTaskCard\r\n          task={task}\r\n          setEdited={setEdited}\r\n          updateTask={updateTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.shape({}).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withLoading from \"../../helpers/withLoading\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nimport \"./TasksList.css\";\r\n\r\nconst TaskList = ({ tasks, updateTask, deleteTask }) => {\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <div className=\"task-list\">\r\n        <p className=\"message\">[ список пуст ]</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map(task => (\r\n        <TaskItem\r\n          key={task._id}\r\n          task={task}\r\n          updateTask={updateTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withLoading(TaskList);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllTasks,\r\n  addTask,\r\n  updateTask,\r\n  deleteTask\r\n} from \"../../actions/taskActions\";\r\n\r\nimport { changeFilter } from \"../../reducers/filter\";\r\nimport getFilteredTasks from \"../../helpers/getFilteredTasks\";\r\n\r\nimport TaskForm from \"../../components/TaskForm/TaskForm\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport TasksList from \"../../components/TasksList/TasksList\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    props.getAllTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h2 className=\"heading\">Список задач</h2>\r\n      </header>\r\n\r\n      <main className=\"main\">\r\n        <TaskForm addTask={props.addTask} />\r\n        <Filters\r\n          activeFilter={props.activeFilter}\r\n          changeFilter={props.changeFilter}\r\n        />\r\n        <TasksList\r\n          isLoading={props.isLoading}\r\n          tasks={props.tasks}\r\n          updateTask={props.updateTask}\r\n          deleteTask={props.deleteTask}\r\n        />\r\n      </main>\r\n\r\n      <footer>\r\n        <p>\r\n          ToDo App <a href=\"https://github.com/ZackFox/react-todo\">(GitHub)</a>{\" \"}\r\n          coding by ZackFox\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    tasks: getFilteredTasks(state.taskReducer.tasks, state.filter.active),\r\n    isLoading: state.taskReducer.isLoading,\r\n    activeFilter: state.filter.active\r\n  }),\r\n  {\r\n    getAllTasks,\r\n    addTask,\r\n    updateTask,\r\n    deleteTask,\r\n    changeFilter\r\n  }\r\n)(App);\r\n","export default (tasks, activeFilter) => {\r\n  if (activeFilter === \"all\") {\r\n    return tasks;\r\n  } else if (activeFilter === \"current\") {\r\n    return tasks.filter(t => !t.isCompleted);\r\n  } else if (activeFilter === \"completed\") {\r\n    return tasks.filter(t => t.isCompleted);\r\n  }\r\n};\r\n","import {\r\n  ALL_TASKS_REQUEST,\r\n  ADD_TASK_REQUEST,\r\n  UPDATE_TASK_REQUEST,\r\n  DELETE_TASK_REQUEST\r\n} from \"../reducers/tasks\";\r\n\r\nexport const getAllTasks = () => ({ type: ALL_TASKS_REQUEST });\r\n\r\nexport const addTask = text => ({ type: ADD_TASK_REQUEST, text });\r\n\r\nexport const updateTask = (prevTask, nextTask) => ({\r\n  type: UPDATE_TASK_REQUEST,\r\n  prevTask,\r\n  nextTask\r\n});\r\n\r\nexport const deleteTask = task => ({ type: DELETE_TASK_REQUEST, task });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport sagas from \"./sagas\";\nimport reducers from \"./reducers\";\n\nimport App from \"./containers/App/App\";\n\nimport \"./index.css\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}