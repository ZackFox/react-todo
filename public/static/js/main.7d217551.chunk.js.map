{"version":3,"sources":["helpers/withLoading.js","reducers/tasks.js","reducers/index.js","reducers/filter.js","components/TaskForm/TaskForm.js","components/Filters/Filters.js","components/TaskItem/TaskCard.js","components/TaskItem/EditedTaskCard.js","components/TaskItem/TaskCheckbox.js","components/TaskItem/TaskItem.js","components/TasksList/TasksList.js","containers/App/App.js","helpers/getFilteredTasks.js","actions/taskActions.js","serviceWorker.js","index.js"],"names":["Component","initialState","tasks","isLoading","combineReducers","taskReducer","state","arguments","length","undefined","action","type","Object","objectSpread","updated","toConsumableArray","push","task","filtered","map","t","_id","filter","active","TaskForm","value","changeHandler","e","_this","setState","target","submitHandler","preventDefault","text","props","addTask","react_default","a","createElement","className","onSubmit","this","onChange","placeholder","href","onClick","ALL","CURRENT","COMPLETED","TaskFilter","_ref","activeFilter","changeFilter","filterHandler","isActive","concat","TaskCard","isCompleted","onEdit","onDelete","title","EditedTaskCard","onSave","onCancel","name","autoFocus","TaskCheckbox","id","onToggle","checked","htmlFor","TaskItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleEdit","isEdited","toggleHandler","updateTask","parentNode","querySelector","deleteHandler","deleteTask","components_TaskItem_TaskCheckbox","TaskItem_EditedTaskCard","TaskItem_TaskCard","withLoading","components_TaskItem_TaskItem","key","objectWithoutProperties","App","getAllTasks","components_TaskForm_TaskForm","Filters_Filters","TasksList_TasksList","connect","dispatch","axios","get","then","data","catch","err","post","_ref2","console","log","put","_ref3","delete","_ref4","Boolean","window","location","hostname","match","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d217551.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default Component => {\n  return ({ isLoading, ...props }) =>\n    isLoading ? (\n      <div className=\"task-list\">\n        <p className=\"loader\">[ загрузка... ]</p>\n      </div>\n    ) : (\n      <Component {...props} />\n    );\n};\n","export const ALL_TASKS_REQUEST = \"ALL_TASKS_REQUEST\";\nexport const ALL_TASKS_SUCCESS = \"ALL_TASKS_SUCCESS\";\nexport const ALL_TASKS_FAILURE = \"ALL_TASKS_FAILURE\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\n\nconst initialState = {\n  tasks: [],\n  isLoading: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_TASKS_REQUEST: {\n      return { ...state, isLoading: true };\n    }\n    case ALL_TASKS_SUCCESS: {\n      return { tasks: action.tasks, isLoading: false };\n    }\n    case ALL_TASKS_FAILURE: {\n      return { ...state, isLoading: false };\n    }\n    case ADD_TASK: {\n      const updated = [...state.tasks];\n      updated.push(action.task);\n      return { ...state, tasks: updated };\n    }\n    case UPDATE_TASK: {\n      const filtered = state.tasks.map(t => {\n        if (t._id === action.task._id) {\n          return action.task;\n        }\n        return t;\n      });\n      return { ...state, tasks: filtered };\n    }\n    case DELETE_TASK: {\n      return {\n        ...state,\n        tasks: state.tasks.filter(t => t._id !== action.task._id)\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport filter from \"./filter\";\r\n\r\nexport default combineReducers({ taskReducer: tasks, filter });\r\n","const CHANGE_FILTER = \"CHANGE_FILTER\";\n\nexport const filters = [\"all\", \"current\", \"completed\"];\n\nexport const changeFilter = filter => dispatch => {\n  dispatch({ type: CHANGE_FILTER, filter });\n};\n\nexport default (state = { active: \"all\" }, action) => {\n  switch (action.type) {\n    case CHANGE_FILTER: {\n      return { active: action.filter };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskForm.css\";\r\n\r\nclass TaskForm extends Component {\r\n  state = { value: \"\" };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const text = this.state.value;\r\n    if (text === \"\") return;\r\n\r\n    this.props.addTask(text);\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"task-form\">\r\n        <form onSubmit={this.submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.value}\r\n            placeholder=\"Добавить задачу\"\r\n          />\r\n\r\n          <a href=\"/\" className=\"form-submit\" onClick={this.submitHandler}>\r\n            +\r\n          </a>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskForm.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport { filters } from \"../../reducers/filter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Filters.css\";\r\n\r\nconst [ALL, CURRENT, COMPLETED] = filters;\r\n\r\nconst TaskFilter = ({ activeFilter, changeFilter }) => {\r\n  const filterHandler = filter => e => {\r\n    e.preventDefault();\r\n    changeFilter(filter);\r\n  };\r\n\r\n  const isActive = (activeFilter, filter) => {\r\n    return activeFilter === filter ? \"active\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, ALL)}`}\r\n        onClick={filterHandler(ALL)}\r\n      >\r\n        Все\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, CURRENT)}`}\r\n        onClick={filterHandler(CURRENT)}\r\n      >\r\n        Активные\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, COMPLETED)}`}\r\n        onClick={filterHandler(COMPLETED)}\r\n      >\r\n        Выполненные\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskFilter.propTypes = {\r\n  activeFilter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst TaskCard = ({ text, isCompleted, onEdit, onDelete }) => {\r\n  return (\r\n    <div className={`task-card ${isCompleted ? \"completed\" : \"\"}`}>\r\n      <a href=\"/\" className=\"task-edit\" title=\"изменить\" onClick={onEdit}>\r\n        &#x270E;\r\n      </a>\r\n      <a href=\"/\" className=\"task-delete\" title=\"удалить\" onClick={onDelete}>\r\n        &#x2716;\r\n      </a>\r\n      <span className=\"task-text\">{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCard.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst EditedTaskCard = ({ text, onSave, onCancel }) => {\r\n  return (\r\n    <div className=\"task-card edited\">\r\n      <form onSubmit={onSave}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"task-text\"\r\n          name=\"changedValue\"\r\n          autoFocus=\"true\"\r\n          value={text}\r\n        />\r\n        <a href=\"/\" className=\"task-cancel\" title=\"отменить\" onClick={onCancel}>\r\n          &#x2716;\r\n        </a>\r\n        <a href=\"/\" className=\"task-save\" title=\"сохранить\" onClick={onSave}>\r\n          OK\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditedTaskCard.propTypes = {\r\n  test: PropTypes.string.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EditedTaskCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskCheckbox.css\";\r\n\r\nconst TaskCheckbox = ({ id, isCompleted, onToggle }) => {\r\n  return (\r\n    <div className=\"task-checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`check_${id}`}\r\n        checked={isCompleted}\r\n        onChange={onToggle}\r\n      />\r\n      <label\r\n        htmlFor={`check_${id}`}\r\n        title=\"отметить\"\r\n        className={`proxy-checkbox ${isCompleted ? \"checked\" : \"\"}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCheckbox;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nimport TaskCard from \"./TaskCard\";\r\nimport EditedTaskCard from \"./EditedTaskCard\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\n\r\nclass TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdited: false\r\n    };\r\n  }\r\n\r\n  toggleEdit = e => {\r\n    e.preventDefault();\r\n    this.setState(state => ({ isEdited: !state.isEdited }));\r\n  };\r\n\r\n  toggleHandler = () => {\r\n    if (!this.state.isEdited) {\r\n      const id = this.props.task._id;\r\n      const text = this.props.task.text;\r\n      const isCompleted = !this.props.task.isCompleted;\r\n      this.props.updateTask(id, { text, isCompleted });\r\n    }\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const id = this.props.task._id;\r\n    const text = e.target.parentNode.querySelector(\".task-text\").value;\r\n    const isCompleted = this.props.task.isCompleted;\r\n    this.props.updateTask(id, { text, isCompleted });\r\n    this.toggleEdit(e);\r\n  };\r\n\r\n  deleteHandler = e => {\r\n    e.preventDefault();\r\n    this.props.deleteTask(this.props.task._id);\r\n  };\r\n\r\n  render() {\r\n    const { isEdited } = this.state;\r\n\r\n    return (\r\n      <div className={`task-item`}>\r\n        <TaskCheckbox\r\n          id={this.props.task._id}\r\n          isCompleted={this.props.task.isCompleted}\r\n          onToggle={this.toggleHandler}\r\n        />\r\n\r\n        {!isEdited ? (\r\n          <TaskCard\r\n            text={this.props.task.text}\r\n            isCompleted={this.props.task.isCompleted}\r\n            onEdit={this.toggleEdit}\r\n            onDelete={this.deleteHandler}\r\n          />\r\n        ) : (\r\n          <EditedTaskCard\r\n            text={this.props.task.text}\r\n            onCancel={this.toggleEdit}\r\n            onSave={this.submitHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.shape({}).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withLoading from \"../../helpers/withLoading\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nimport \"./TasksList.css\";\r\n\r\nconst TaskList = ({ tasks, updateTask, deleteTask }) => {\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <div className=\"task-list\">\r\n        <p className=\"message\">[ список пуст ]</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map(task => (\r\n        <TaskItem\r\n          key={task._id}\r\n          task={task}\r\n          updateTask={updateTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withLoading(TaskList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllTasks,\r\n  addTask,\r\n  updateTask,\r\n  deleteTask\r\n} from \"../../actions/taskActions\";\r\n\r\nimport { changeFilter } from \"../../reducers/filter\";\r\nimport getFilteredTasks from \"../../helpers/getFilteredTasks\";\r\n\r\nimport TaskForm from \"../../components/TaskForm/TaskForm\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport TasksList from \"../../components/TasksList/TasksList\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllTasks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header>\r\n          <h2 className=\"heading\">Список задач</h2>\r\n        </header>\r\n        <main className=\"main\">\r\n          <TaskForm addTask={this.props.addTask} />\r\n          <Filters\r\n            activeFilter={this.props.activeFilter}\r\n            changeFilter={this.props.changeFilter}\r\n          />\r\n          <TasksList\r\n            isLoading={this.props.isLoading}\r\n            tasks={this.props.tasks}\r\n            updateTask={this.props.updateTask}\r\n            deleteTask={this.props.deleteTask}\r\n          />\r\n        </main>\r\n        <footer>\r\n          <p>\r\n            ToDo App{\" \"}\r\n            <a href=\"https://github.com/ZackFox/react-todo\">(GitHub)</a> coding\r\n            by ZackFox\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    tasks: getFilteredTasks(state.taskReducer.tasks, state.filter.active),\r\n    isLoading: state.taskReducer.isLoading,\r\n    activeFilter: state.filter.active\r\n  }),\r\n  { changeFilter, getAllTasks, addTask, updateTask, deleteTask }\r\n)(App);\r\n","export default (tasks, activeFilter) => {\n  if (activeFilter === \"all\") {\n    return tasks;\n  } else if (activeFilter === \"current\") {\n    return tasks.filter(t => !t.isCompleted);\n  } else if (activeFilter === \"completed\") {\n    return tasks.filter(t => t.isCompleted);\n  }\n};\n","import {\n  ALL_TASKS_REQUEST,\n  ALL_TASKS_SUCCESS,\n  ALL_TASKS_FAILURE,\n  ADD_TASK,\n  UPDATE_TASK,\n  DELETE_TASK\n} from \"../reducers/tasks\";\nimport axios from \"axios\";\n\nexport const getAllTasks = () => dispatch => {\n  dispatch({ type: ALL_TASKS_REQUEST });\n  axios\n    .get(\"/api/v1/tasks\")\n    .then(({ data }) => {\n      dispatch({ type: ALL_TASKS_SUCCESS, tasks: data.tasks });\n    })\n    .catch(err => dispatch({ type: ALL_TASKS_FAILURE }));\n};\n\nexport const addTask = text => dispatch => {\n  axios\n    .post(\"/api/v1/tasks\", { text })\n    .then(({ data }) => {\n      dispatch({ type: ADD_TASK, task: data.task });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const updateTask = (id, task) => dispatch => {\n  axios\n    .put(`/api/v1/tasks/${id}`, task)\n    .then(({ data }) => {\n      dispatch({ type: UPDATE_TASK, task: data.task });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteTask = id => dispatch => {\n  axios\n    .delete(`/api/v1/tasks/${id}`)\n    .then(({ data }) => {\n      dispatch({ type: DELETE_TASK, task: data.task });\n    })\n    .catch(err => console.log(err));\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport \"./index.css\";\nimport reducers from \"./reducers\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}