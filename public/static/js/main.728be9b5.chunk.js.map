{"version":3,"sources":["helpers/withLoading.js","reducers/tasks.js","reducers/index.js","reducers/filter.js","components/TaskForm/TaskForm.js","components/Filters/Filters.js","components/TaskItem/TaskCard.js","components/TaskItem/EditedTaskCard.js","components/TaskItem/TaskCheckbox.js","components/TaskItem/TaskItem.js","components/TasksList/TasksList.js","containers/App/App.js","helpers/getFilteredTasks.js","actions/taskActions.js","index.js"],"names":["Component","initialState","tasks","isLoading","combineReducers","taskReducer","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","task","filtered","map","_id","filter","t","active","TaskForm","value","changeHandler","e","_this","setState","target","submitHandler","preventDefault","text","props","addTask","react_default","a","createElement","className","onSubmit","this","onChange","placeholder","href","onClick","ALL","CURRENT","COMPLETED","TaskFilter","_ref","activeFilter","changeFilter","filterHandler","isActive","TaskCard","isCompleted","onEdit","onDelete","title","EditedTaskCard","onTyping","onSave","onCancel","autoFocus","autoComplete","defaultValue","TaskCheckbox","id","onToggle","checked","htmlFor","TaskItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","valueChangeHandler","completeChangeHandler","isEdited","updatedTask","updateTask","editHandler","cancelHandler","deleteHandler","deleteTask","parentNode","querySelector","components_TaskItem_TaskCheckbox","TaskItem_EditedTaskCard","TaskItem_TaskCard","withLoading","components_TaskItem_TaskItem","key","objectWithoutProperties","App","getAllTasks","components_TaskForm_TaskForm","Filters_Filters","TasksList_TasksList","connect","dispatch","axios","get","then","data","catch","err","post","_ref2","console","log","nextTask","prevTask","put","delete","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.728be9b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default Component => {\r\n  return ({ isLoading, ...props }) =>\r\n    isLoading ? (\r\n      <div className=\"task-list\">\r\n        <p className=\"loader\">[ загрузка... ]</p>\r\n      </div>\r\n    ) : (\r\n      <Component {...props} />\r\n    );\r\n};\r\n","export const ALL_TASKS_REQUEST = \"ALL_TASKS_REQUEST\";\r\nexport const ALL_TASKS_SUCCESS = \"ALL_TASKS_SUCCESS\";\r\nexport const ALL_TASKS_FAILURE = \"ALL_TASKS_FAILURE\";\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\nexport const UPDATE_TASK_FAILURE = \"UPDATE_TASK_FAILURE\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ALL_TASKS_REQUEST: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case ALL_TASKS_SUCCESS: {\r\n      return { tasks: action.tasks, isLoading: false };\r\n    }\r\n    case ALL_TASKS_FAILURE: {\r\n      return { ...state, isLoading: false };\r\n    }\r\n    case ADD_TASK: {\r\n      return { ...state, tasks: [...state.tasks, action.task] };\r\n    }\r\n    case UPDATE_TASK: {\r\n      const filtered = state.tasks.map(task => {\r\n        return task._id === action.task._id ? action.task : task;\r\n      });\r\n      return { ...state, tasks: filtered };\r\n    }\r\n    case DELETE_TASK: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => t._id !== action.task._id)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport filter from \"./filter\";\r\n\r\nexport default combineReducers({ taskReducer: tasks, filter });\r\n","const CHANGE_FILTER = \"CHANGE_FILTER\";\r\n\r\nexport const filters = [\"all\", \"current\", \"completed\"];\r\n\r\nexport const changeFilter = filter => dispatch => {\r\n  dispatch({ type: CHANGE_FILTER, filter });\r\n};\r\n\r\nexport default (state = { active: \"all\" }, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FILTER: {\r\n      return { active: action.filter };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskForm.css\";\r\n\r\nclass TaskForm extends Component {\r\n  state = { value: \"\" };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const text = this.state.value;\r\n    if (text === \"\") return;\r\n\r\n    this.props.addTask(text);\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"task-form\">\r\n        <form onSubmit={this.submitHandler}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.value}\r\n            placeholder=\"Добавить задачу\"\r\n          />\r\n\r\n          <a href=\"/\" className=\"form-submit\" onClick={this.submitHandler}>\r\n            +\r\n          </a>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskForm.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport { filters } from \"../../reducers/filter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Filters.css\";\r\n\r\nconst [ALL, CURRENT, COMPLETED] = filters;\r\n\r\nconst TaskFilter = ({ activeFilter, changeFilter }) => {\r\n  const filterHandler = filter => e => {\r\n    e.preventDefault();\r\n    changeFilter(filter);\r\n  };\r\n\r\n  const isActive = (activeFilter, filter) => {\r\n    return activeFilter === filter ? \"active\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, ALL)}`}\r\n        onClick={filterHandler(ALL)}\r\n      >\r\n        Все\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, CURRENT)}`}\r\n        onClick={filterHandler(CURRENT)}\r\n      >\r\n        Активные\r\n      </a>\r\n      <a\r\n        href=\"/\"\r\n        className={`filter-link ${isActive(activeFilter, COMPLETED)}`}\r\n        onClick={filterHandler(COMPLETED)}\r\n      >\r\n        Выполненные\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskFilter.propTypes = {\r\n  activeFilter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst TaskCard = ({ text, isCompleted, onEdit, onDelete }) => {\r\n  return (\r\n    <div className={`task-card ${isCompleted ? \"completed\" : \"\"}`}>\r\n      <a href=\"/\" className=\"task-edit\" title=\"изменить\" onClick={onEdit}>\r\n        &#x270E;\r\n      </a>\r\n      <a href=\"/\" className=\"task-delete\" title=\"удалить\" onClick={onDelete}>\r\n        &#x2716;\r\n      </a>\r\n      <span className=\"task-text\">{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCard.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nconst EditedTaskCard = ({ text, onTyping, onSave, onCancel }) => {\r\n  return (\r\n    <div className=\"task-card edited\">\r\n      {/* <form onSubmit={onSave}> */}\r\n      <input\r\n        type=\"text\"\r\n        className=\"task-text\"\r\n        autoFocus\r\n        autoComplete=\"off\"\r\n        onChange={onTyping}\r\n        defaultValue={text}\r\n      />\r\n      <a href=\"/\" className=\"task-cancel\" title=\"отменить\" onClick={onCancel}>\r\n        &#x2716;\r\n      </a>\r\n      <a href=\"/\" className=\"task-save\" title=\"сохранить\" onClick={onSave}>\r\n        OK\r\n      </a>\r\n      {/* </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nEditedTaskCard.propTypes = {\r\n  test: PropTypes.string.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EditedTaskCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskCheckbox.css\";\r\n\r\nconst TaskCheckbox = ({ id, isCompleted, onToggle }) => {\r\n  return (\r\n    <div className=\"task-checkbox\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`check_${id}`}\r\n        checked={isCompleted}\r\n        onChange={onToggle}\r\n      />\r\n      <label\r\n        htmlFor={`check_${id}`}\r\n        title=\"отметить\"\r\n        className={`proxy-checkbox ${isCompleted ? \"checked\" : \"\"}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  isCompleted: PropTypes.bool.isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskCheckbox;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TaskItem.css\";\r\n\r\nimport TaskCard from \"./TaskCard\";\r\nimport EditedTaskCard from \"./EditedTaskCard\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\n\r\nclass TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdited: false\r\n    };\r\n  }\r\n\r\n  valueChangeHandler = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  completeChangeHandler = () => {\r\n    if (!this.state.isEdited) {\r\n      const updatedTask = {\r\n        ...this.props.task,\r\n        isCompleted: !this.props.task.isCompleted\r\n      };\r\n\r\n      this.props.updateTask(updatedTask, this.props.task);\r\n    }\r\n  };\r\n\r\n  editHandler = e => {\r\n    e.preventDefault();\r\n    this.setState(state => ({ isEdited: true }));\r\n  };\r\n\r\n  cancelHandler = e => {\r\n    e.preventDefault();\r\n    this.setState({ value: this.props.task.text, isEdited: false });\r\n  };\r\n\r\n  deleteHandler = e => {\r\n    e.preventDefault();\r\n    this.props.deleteTask(this.props.task);\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const card = e.target.parentNode;\r\n    const text = card.querySelector(\".task-text\").value;\r\n    const updatedTask = { ...this.props.task, text };\r\n\r\n    this.props.updateTask(updatedTask, this.props.task);\r\n    this.setState({ isEdited: false });\r\n  };\r\n\r\n  render() {\r\n    const { isEdited } = this.state;\r\n\r\n    return (\r\n      <div className=\"task-item\">\r\n        <TaskCheckbox\r\n          id={this.props.task._id}\r\n          isCompleted={this.props.task.isCompleted}\r\n          onToggle={this.completeChangeHandler}\r\n        />\r\n\r\n        {!isEdited ? (\r\n          <TaskCard\r\n            text={this.props.task.text}\r\n            isCompleted={this.props.task.isCompleted}\r\n            onEdit={this.editHandler}\r\n            onDelete={this.deleteHandler}\r\n          />\r\n        ) : (\r\n          <EditedTaskCard\r\n            text={this.props.task.text}\r\n            // onTyping={this.valueChangeHandler}\r\n            onCancel={this.cancelHandler}\r\n            onSave={this.submitHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.shape({}).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withLoading from \"../../helpers/withLoading\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nimport \"./TasksList.css\";\r\n\r\nconst TaskList = ({ tasks, updateTask, deleteTask }) => {\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <div className=\"task-list\">\r\n        <p className=\"message\">[ список пуст ]</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map(task => (\r\n        <TaskItem\r\n          key={task._id}\r\n          task={task}\r\n          updateTask={updateTask}\r\n          deleteTask={deleteTask}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  updateTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withLoading(TaskList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getAllTasks,\r\n  addTask,\r\n  updateTask,\r\n  deleteTask\r\n} from \"../../actions/taskActions\";\r\n\r\nimport { changeFilter } from \"../../reducers/filter\";\r\nimport getFilteredTasks from \"../../helpers/getFilteredTasks\";\r\n\r\nimport TaskForm from \"../../components/TaskForm/TaskForm\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport TasksList from \"../../components/TasksList/TasksList\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllTasks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <header>\r\n          <h2 className=\"heading\">Список задач</h2>\r\n        </header>\r\n        <main className=\"main\">\r\n          <TaskForm addTask={this.props.addTask} />\r\n          <Filters\r\n            activeFilter={this.props.activeFilter}\r\n            changeFilter={this.props.changeFilter}\r\n          />\r\n          <TasksList\r\n            isLoading={this.props.isLoading}\r\n            tasks={this.props.tasks}\r\n            updateTask={this.props.updateTask}\r\n            deleteTask={this.props.deleteTask}\r\n          />\r\n        </main>\r\n        <footer>\r\n          <p>\r\n            ToDo App{\" \"}\r\n            <a href=\"https://github.com/ZackFox/react-todo\">(GitHub)</a> coding\r\n            by ZackFox\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    tasks: getFilteredTasks(state.taskReducer.tasks, state.filter.active),\r\n    isLoading: state.taskReducer.isLoading,\r\n    activeFilter: state.filter.active\r\n  }),\r\n  { changeFilter, getAllTasks, addTask, updateTask, deleteTask }\r\n)(App);\r\n","export default (tasks, activeFilter) => {\r\n  if (activeFilter === \"all\") {\r\n    return tasks;\r\n  } else if (activeFilter === \"current\") {\r\n    return tasks.filter(t => !t.isCompleted);\r\n  } else if (activeFilter === \"completed\") {\r\n    return tasks.filter(t => t.isCompleted);\r\n  }\r\n};\r\n","import {\r\n  ALL_TASKS_REQUEST,\r\n  ALL_TASKS_SUCCESS,\r\n  ALL_TASKS_FAILURE,\r\n  ADD_TASK,\r\n  UPDATE_TASK,\r\n  DELETE_TASK\r\n} from \"../reducers/tasks\";\r\nimport axios from \"axios\";\r\n\r\nexport const getAllTasks = () => dispatch => {\r\n  dispatch({ type: ALL_TASKS_REQUEST });\r\n  axios\r\n    .get(\"/api/v1/tasks\")\r\n    .then(({ data }) => {\r\n      dispatch({ type: ALL_TASKS_SUCCESS, tasks: data.tasks });\r\n    })\r\n    .catch(err => dispatch({ type: ALL_TASKS_FAILURE }));\r\n};\r\n\r\nexport const addTask = text => dispatch => {\r\n  axios\r\n    .post(\"/api/v1/tasks\", { text })\r\n    .then(({ data }) => dispatch({ type: ADD_TASK, task: data.task }))\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateTask = (nextTask, prevTask) => dispatch => {\r\n  dispatch({ type: UPDATE_TASK, task: nextTask });\r\n  axios\r\n    .put(`/api/v1/tasks/${nextTask._id}`, nextTask)\r\n    .catch(err => dispatch({ type: UPDATE_TASK, task: prevTask }));\r\n};\r\n\r\nexport const deleteTask = task => dispatch => {\r\n  dispatch({ type: DELETE_TASK, task });\r\n  axios\r\n    .delete(`/api/v1/tasks/${task._id}`)\r\n    .catch(err => dispatch({ type: ADD_TASK, task }));\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport \"./index.css\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./containers/App/App\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}